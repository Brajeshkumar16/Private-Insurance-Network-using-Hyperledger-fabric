#!/bin/bash

# function createAce() {
#   infoln "Enrolling the CA admin"
#   mkdir -p organizations/peerOrganizations/AceHospitals/

#   export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/AceHospitals/

#   set -x
#   fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca-Ace --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   { set +x; } 2>/dev/null

#   echo 'NodeOUs:
#   Enable: true
#   ClientOUIdentifier:
#     Certificate: cacerts/localhost-7054-ca-Ace.pem
#     OrganizationalUnitIdentifier: client
#   PeerOUIdentifier:
#     Certificate: cacerts/localhost-7054-ca-Ace.pem
#     OrganizationalUnitIdentifier: peer
#   AdminOUIdentifier:
#     Certificate: cacerts/localhost-7054-ca-Ace.pem
#     OrganizationalUnitIdentifier: admin
#   OrdererOUIdentifier:
#     Certificate: cacerts/localhost-7054-ca-Ace.pem
#     OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/AceHospitals/msp/config.yaml"

#   # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

#   # Copy Ace's CA cert to Ace's /msp/tlscacerts directory (for use in the channel MSP definition)
#   mkdir -p "${PWD}/organizations/peerOrganizations/AceHospitals/msp/tlscacerts"
#   cp "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem" "${PWD}/organizations/peerOrganizations/AceHospitals/msp/tlscacerts/ca.crt"

#   # Copy Ace's CA cert to Ace's /tlsca directory (for use by clients)
#   mkdir -p "${PWD}/organizations/peerOrganizations/AceHospitals/tlsca"
#   cp "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem" "${PWD}/organizations/peerOrganizations/AceHospitals/tlsca/tlsca.AceHospitals-cert.pem"

#   # Copy Ace's CA cert to Ace's /ca directory (for use by clients)
#   mkdir -p "${PWD}/organizations/peerOrganizations/AceHospitals/ca"
#   cp "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem" "${PWD}/organizations/peerOrganizations/AceHospitals/ca/ca.AceHospitals-cert.pem"

#   infoln "Registering DoctorPeer"
#   set -x
#   fabric-ca-client register --caname ca-Ace --id.name DoctorPeer --id.secret DoctorPeerpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   { set +x; } 2>/dev/null

#   infoln "Registering user"
#   set -x
#   fabric-ca-client register --caname ca-Ace --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   { set +x; } 2>/dev/null

#   infoln "Registering the org admin"
#   set -x
#   fabric-ca-client register --caname ca-Ace --id.name Aceadmin --id.secret Aceadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   { set +x; } 2>/dev/null

#   infoln "Generating the DoctorPeer msp"
#   set -x
#   fabric-ca-client enroll -u https://DoctorPeer:DoctorPeerpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   { set +x; } 2>/dev/null

#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/msp/config.yaml"

#   infoln "Generating the DoctorPeer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
#   set -x
#   fabric-ca-client enroll -u https://DoctorPeer:DoctorPeerpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/tls" --enrollment.profile tls --csr.hosts DoctorPeer --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   { set +x; } 2>/dev/null

#   # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/tls/ca.crt"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/tls/server.crt"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/tls/keystore/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/tls/server.key"

#   infoln "Generating the user msp"
#   set -x
#   fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/users/User1@AceHospitals/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   { set +x; } 2>/dev/null

#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AceHospitals/users/User1@AceHospitals/msp/config.yaml"

#   infoln "Generating the org admin msp"
#   set -x
#   fabric-ca-client enroll -u https://Aceadmin:Aceadminpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/users/Admin@AceHospitals/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   { set +x; } 2>/dev/null

#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AceHospitals/users/Admin@AceHospitals/msp/config.yaml"



#   # more peers are added to the network

#   fabric-ca-client register --caname ca-Ace --id.name NursePeer --id.secret NursePeerpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   mkdir -p organizations/peerOrganizations/AceHospitals/peers/NursePeer
#   fabric-ca-client enroll -u https://NursePeer:NursePeerpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/msp/config.yaml"
#   fabric-ca-client enroll -u https://NursePeer:NursePeerpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/tls" --enrollment.profile tls --csr.hosts NursePeer --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/tls/ca.crt"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/tls/server.crt"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/tls/keystore/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/tls/server.key"

#   fabric-ca-client register --caname ca-Ace --id.name AnchDoctor --id.secret AnchDoctorpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   mkdir -p organizations/peerOrganizations/AceHospitals/peers/AnchDoctor
#   fabric-ca-client enroll -u https://AnchDoctor:AnchDoctorpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/msp/config.yaml"
#   fabric-ca-client enroll -u https://AnchDoctor:AnchDoctorpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/tls" --enrollment.profile tls --csr.hosts AnchDoctor --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/tls/ca.crt"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/tls/server.crt"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/tls/keystore/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/tls/server.key"

#   fabric-ca-client register --caname ca-Ace --id.name EndorsStaff --id.secret EndorsStaffpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   mkdir -p organizations/peerOrganizations/AceHospitals/peers/EndorsStaff
#   fabric-ca-client enroll -u https://EndorsStaff:EndorsStaffpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/msp/config.yaml"
#   fabric-ca-client enroll -u https://EndorsStaff:EndorsStaffpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/tls" --enrollment.profile tls --csr.hosts EndorsStaff --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/tls/ca.crt"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/tls/server.crt"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/tls/keystore/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/tls/server.key"

#   fabric-ca-client register --caname ca-Ace --id.name AdmissionsPeer --id.secret AdmissionsPeerpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   mkdir -p organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer
#   fabric-ca-client enroll -u https://AdmissionsPeer:AdmissionsPeerpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/msp/config.yaml"
#   fabric-ca-client enroll -u https://AdmissionsPeer:AdmissionsPeerpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/tls" --enrollment.profile tls --csr.hosts AdmissionsPeer --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/tls/ca.crt"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/tls/server.crt"
#   cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/tls/keystore/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/tls/server.key"

  
# }



function createAce() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/AceHospitals/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/AceHospitals/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca-Ace --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-Ace.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-Ace.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-Ace.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-Ace.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/AceHospitals/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy Ace's CA cert to Ace's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/AceHospitals/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem" "${PWD}/organizations/peerOrganizations/AceHospitals/msp/tlscacerts/ca.crt"

  # Copy Ace's CA cert to Ace's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/AceHospitals/tlsca"
  cp "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem" "${PWD}/organizations/peerOrganizations/AceHospitals/tlsca/tlsca.AceHospitals-cert.pem"

  # Copy Ace's CA cert to Ace's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/AceHospitals/ca"
  cp "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem" "${PWD}/organizations/peerOrganizations/AceHospitals/ca/ca.AceHospitals-cert.pem"

  infoln "Registering DoctorPeer"
  set -x
  fabric-ca-client register --caname ca-Ace --id.name DoctorPeer --id.secret DoctorPeerpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-Ace --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-Ace --id.name Aceadmin --id.secret Aceadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the DoctorPeer msp"
  set -x
  fabric-ca-client enroll -u https://DoctorPeer:DoctorPeerpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/AceHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/msp/config.yaml"

  infoln "Generating the DoctorPeer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://DoctorPeer:DoctorPeerpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/tls" --enrollment.profile tls --csr.hosts DoctorPeer --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/tls/keystore/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/DoctorPeer/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/users/User1@AceHospitals/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/AceHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AceHospitals/users/User1@AceHospitals/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://Aceadmin:Aceadminpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/users/Admin@AceHospitals/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/AceHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AceHospitals/users/Admin@AceHospitals/msp/config.yaml"


  

fabric-ca-client register --caname ca-Ace --id.name NursePeer --id.secret NursePeerpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
mkdir -p organizations/peerOrganizations/AceHospitals/peers/NursePeer
fabric-ca-client enroll -u https://NursePeer:NursePeerpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
cp "${PWD}/organizations/peerOrganizations/AceHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/msp/config.yaml"
fabric-ca-client enroll -u https://NursePeer:NursePeerpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/tls" --enrollment.profile tls --csr.hosts NursePeer --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/tls/ca.crt"
cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/tls/server.crt"
cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/tls/keystore/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/NursePeer/tls/server.key"

# export PATH=$PATH:${PWD}/../bin


fabric-ca-client register --caname ca-Ace --id.name AnchDoctor --id.secret AnchDoctorpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
mkdir -p organizations/peerOrganizations/AceHospitals/peers/AnchDoctor
fabric-ca-client enroll -u https://AnchDoctor:AnchDoctorpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
cp "${PWD}/organizations/peerOrganizations/AceHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/msp/config.yaml"
fabric-ca-client enroll -u https://AnchDoctor:AnchDoctorpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/tls" --enrollment.profile tls --csr.hosts AnchDoctor --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/tls/ca.crt"
cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/tls/server.crt"
cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/tls/keystore/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AnchDoctor/tls/server.key"


fabric-ca-client register --caname ca-Ace --id.name EndorsStaff --id.secret EndorsStaffpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
mkdir -p organizations/peerOrganizations/AceHospitals/peers/EndorsStaff
fabric-ca-client enroll -u https://EndorsStaff:EndorsStaffpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/msp"  --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
cp "${PWD}/organizations/peerOrganizations/AceHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/msp/config.yaml"
fabric-ca-client enroll -u https://EndorsStaff:EndorsStaffpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/tls" --enrollment.profile tls --csr.hosts EndorsStaff --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/tls/ca.crt"
cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/tls/server.crt"
cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/tls/keystore/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/EndorsStaff/tls/server.key"


fabric-ca-client register --caname ca-Ace --id.name AdmissionsPeer --id.secret AdmissionsPeerpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
mkdir -p organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer
fabric-ca-client enroll -u https://AdmissionsPeer:AdmissionsPeerpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
cp "${PWD}/organizations/peerOrganizations/AceHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/msp/config.yaml"
fabric-ca-client enroll -u https://AdmissionsPeer:AdmissionsPeerpw@localhost:7054 --caname ca-Ace -M "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/tls" --enrollment.profile tls --csr.hosts AdmissionsPeer --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Ace/ca-cert.pem"
cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/tls/ca.crt"
cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/tls/server.crt"
cp "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/tls/keystore/"* "${PWD}/organizations/peerOrganizations/AceHospitals/peers/AdmissionsPeer/tls/server.key"



}

function createOak() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/OakHospitals/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/OakHospitals/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-Oak --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-Oak.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-Oak.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-Oak.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-Oak.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/OakHospitals/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy Oak's CA cert to Oak's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/OakHospitals/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem" "${PWD}/organizations/peerOrganizations/OakHospitals/msp/tlscacerts/ca.crt"

  # Copy Oak's CA cert to Oak's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/OakHospitals/tlsca"
  cp "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem" "${PWD}/organizations/peerOrganizations/OakHospitals/tlsca/tlsca.OakHospitals-cert.pem"

  # Copy Oak's CA cert to Oak's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/OakHospitals/ca"
  cp "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem" "${PWD}/organizations/peerOrganizations/OakHospitals/ca/ca.OakHospitals-cert.pem"

  infoln "Registering OakDoctorPeer"
  set -x
  fabric-ca-client register --caname ca-Oak --id.name OakDoctorPeer --id.secret OakDoctorPeerpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-Oak --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-Oak --id.name Oakadmin --id.secret Oakadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the OakDoctorPeer msp"
  set -x
  fabric-ca-client enroll -u https://OakDoctorPeer:OakDoctorPeerpw@localhost:9054 --caname ca-Oak -M "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakDoctorPeer/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/OakHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakDoctorPeer/msp/config.yaml"

  infoln "Generating the OakDoctorPeer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://OakDoctorPeer:OakDoctorPeerpw@localhost:9054 --caname ca-Oak -M "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakDoctorPeer/tls" --enrollment.profile tls --csr.hosts OakDoctorPeer --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakDoctorPeer/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakDoctorPeer/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakDoctorPeer/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakDoctorPeer/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakDoctorPeer/tls/keystore/"* "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakDoctorPeer/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:9054 --caname ca-Oak -M "${PWD}/organizations/peerOrganizations/OakHospitals/users/User1@OakHospitals/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/OakHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/OakHospitals/users/User1@OakHospitals/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://Oakadmin:Oakadminpw@localhost:9054 --caname ca-Oak -M "${PWD}/organizations/peerOrganizations/OakHospitals/users/Admin@OakHospitals/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/OakHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/OakHospitals/users/Admin@OakHospitals/msp/config.yaml"


  

fabric-ca-client register --caname ca-Oak --id.name OakNursePeer --id.secret OakNursePeerpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
mkdir -p organizations/peerOrganizations/OakHospitals/peers/OakNursePeer
fabric-ca-client enroll -u https://OakNursePeer:OakNursePeerpw@localhost:9054 --caname ca-Oak -M "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakNursePeer/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
cp "${PWD}/organizations/peerOrganizations/OakHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakNursePeer/msp/config.yaml"
fabric-ca-client enroll -u https://OakNursePeer:OakNursePeerpw@localhost:9054 --caname ca-Oak -M "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakNursePeer/tls" --enrollment.profile tls --csr.hosts OakNursePeer --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
cp "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakNursePeer/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakNursePeer/tls/ca.crt"
cp "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakNursePeer/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakNursePeer/tls/server.crt"
cp "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakNursePeer/tls/keystore/"* "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakNursePeer/tls/server.key"

# export PATH=$PATH:${PWD}/../bin


fabric-ca-client register --caname ca-Oak --id.name OakAnchDoctor --id.secret OakAnchDoctorpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
mkdir -p organizations/peerOrganizations/OakHospitals/peers/OakAnchDoctor
fabric-ca-client enroll -u https://OakAnchDoctor:OakAnchDoctorpw@localhost:9054 --caname ca-Oak -M "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAnchDoctor/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
cp "${PWD}/organizations/peerOrganizations/OakHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAnchDoctor/msp/config.yaml"
fabric-ca-client enroll -u https://OakAnchDoctor:OakAnchDoctorpw@localhost:9054 --caname ca-Oak -M "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAnchDoctor/tls" --enrollment.profile tls --csr.hosts OakAnchDoctor --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
cp "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAnchDoctor/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAnchDoctor/tls/ca.crt"
cp "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAnchDoctor/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAnchDoctor/tls/server.crt"
cp "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAnchDoctor/tls/keystore/"* "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAnchDoctor/tls/server.key"


fabric-ca-client register --caname ca-Oak --id.name OakEndorsStaff --id.secret OakEndorsStaffpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
mkdir -p organizations/peerOrganizations/OakHospitals/peers/OakEndorsStaff
fabric-ca-client enroll -u https://OakEndorsStaff:OakEndorsStaffpw@localhost:9054 --caname ca-Oak -M "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakEndorsStaff/msp"  --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
cp "${PWD}/organizations/peerOrganizations/OakHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakEndorsStaff/msp/config.yaml"
fabric-ca-client enroll -u https://OakEndorsStaff:OakEndorsStaffpw@localhost:9054 --caname ca-Oak -M "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakEndorsStaff/tls" --enrollment.profile tls --csr.hosts OakEndorsStaff --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
cp "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakEndorsStaff/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakEndorsStaff/tls/ca.crt"
cp "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakEndorsStaff/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakEndorsStaff/tls/server.crt"
cp "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakEndorsStaff/tls/keystore/"* "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakEndorsStaff/tls/server.key"


fabric-ca-client register --caname ca-Oak --id.name OakAdmissionsPeer --id.secret OakAdmissionsPeerpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
mkdir -p organizations/peerOrganizations/OakHospitals/peers/OakAdmissionsPeer
fabric-ca-client enroll -u https://OakAdmissionsPeer:OakAdmissionsPeerpw@localhost:9054 --caname ca-Oak -M "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAdmissionsPeer/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
cp "${PWD}/organizations/peerOrganizations/OakHospitals/msp/config.yaml" "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAdmissionsPeer/msp/config.yaml"
fabric-ca-client enroll -u https://OakAdmissionsPeer:OakAdmissionsPeerpw@localhost:9054 --caname ca-Oak -M "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAdmissionsPeer/tls" --enrollment.profile tls --csr.hosts OakAdmissionsPeer --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Oak/ca-cert.pem"
cp "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAdmissionsPeer/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAdmissionsPeer/tls/ca.crt"
cp "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAdmissionsPeer/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAdmissionsPeer/tls/server.crt"
cp "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAdmissionsPeer/tls/keystore/"* "${PWD}/organizations/peerOrganizations/OakHospitals/peers/OakAdmissionsPeer/tls/server.key"



}


function createAkansha() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/AkanshaInsurance/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/AkanshaInsurance/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:6054 --caname ca-Akansha --tls.certfiles "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-6054-ca-Akansha.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-6054-ca-Akansha.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-6054-ca-Akansha.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-6054-ca-Akansha.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/AkanshaInsurance/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy Akansha's CA cert to Akansha's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/AkanshaInsurance/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem" "${PWD}/organizations/peerOrganizations/AkanshaInsurance/msp/tlscacerts/ca.crt"

  # Copy Akansha's CA cert to Akansha's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/AkanshaInsurance/tlsca"
  cp "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem" "${PWD}/organizations/peerOrganizations/AkanshaInsurance/tlsca/tlsca.AkanshaInsurance-cert.pem"

  # Copy Akansha's CA cert to Akansha's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/AkanshaInsurance/ca"
  cp "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem" "${PWD}/organizations/peerOrganizations/AkanshaInsurance/ca/ca.AkanshaInsurance-cert.pem"

  infoln "Registering AkanshaEndorser"
  set -x
  fabric-ca-client register --caname ca-Akansha --id.name AkanshaEndorser --id.secret AkanshaEndorserpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-Akansha --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-Akansha --id.name Akanshaadmin --id.secret Akanshaadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the AkanshaEndorser msp"
  set -x
  fabric-ca-client enroll -u https://AkanshaEndorser:AkanshaEndorserpw@localhost:6054 --caname ca-Akansha -M "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaEndorser/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/AkanshaInsurance/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaEndorser/msp/config.yaml"

  infoln "Generating the AkanshaEndorser-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://AkanshaEndorser:AkanshaEndorserpw@localhost:6054 --caname ca-Akansha -M "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaEndorser/tls" --enrollment.profile tls --csr.hosts AkanshaEndorser --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaEndorser/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaEndorser/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaEndorser/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaEndorser/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaEndorser/tls/keystore/"* "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaEndorser/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:6054 --caname ca-Akansha -M "${PWD}/organizations/peerOrganizations/AkanshaInsurance/users/User1@AkanshaInsurance/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/AkanshaInsurance/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AkanshaInsurance/users/User1@AkanshaInsurance/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://Akanshaadmin:Akanshaadminpw@localhost:6054 --caname ca-Akansha -M "${PWD}/organizations/peerOrganizations/AkanshaInsurance/users/Admin@AkanshaInsurance/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/AkanshaInsurance/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AkanshaInsurance/users/Admin@AkanshaInsurance/msp/config.yaml"



  # more peers are added to the network

  fabric-ca-client register --caname ca-Akansha --id.name AkanshaCommitters --id.secret AkanshaCommitterspw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem"
  mkdir -p organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaCommitters
  fabric-ca-client enroll -u https://AkanshaCommitters:AkanshaCommitterspw@localhost:6054 --caname ca-Akansha -M "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaCommitters/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem"
  cp "${PWD}/organizations/peerOrganizations/AkanshaInsurance/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaCommitters/msp/config.yaml"
  fabric-ca-client enroll -u https://AkanshaCommitters:AkanshaCommitterspw@localhost:6054 --caname ca-Akansha -M "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaCommitters/tls" --enrollment.profile tls --csr.hosts AkanshaCommitters --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem"
  cp "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaCommitters/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaCommitters/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaCommitters/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaCommitters/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaCommitters/tls/keystore/"* "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaCommitters/tls/server.key"

  fabric-ca-client register --caname ca-Akansha --id.name AkanshaAnchors --id.secret AkanshaAnchorspw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem"
  mkdir -p organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaAnchors
  fabric-ca-client enroll -u https://AkanshaAnchors:AkanshaAnchorspw@localhost:6054 --caname ca-Akansha -M "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaAnchors/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem"
  cp "${PWD}/organizations/peerOrganizations/AkanshaInsurance/msp/config.yaml" "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaAnchors/msp/config.yaml"
  fabric-ca-client enroll -u https://AkanshaAnchors:AkanshaAnchorspw@localhost:6054 --caname ca-Akansha -M "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaAnchors/tls" --enrollment.profile tls --csr.hosts AkanshaAnchors --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Akansha/ca-cert.pem"
  cp "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaAnchors/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaAnchors/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaAnchors/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaAnchors/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaAnchors/tls/keystore/"* "${PWD}/organizations/peerOrganizations/AkanshaInsurance/peers/AkanshaAnchors/tls/server.key"

 
}


function createLifecare() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/LifecareInsurance/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/LifecareInsurance/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:4054 --caname ca-Lifecare --tls.certfiles "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-4054-ca-Lifecare.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-4054-ca-Lifecare.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-4054-ca-Lifecare.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-4054-ca-Lifecare.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/LifecareInsurance/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy Lifecare's CA cert to Lifecare's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/LifecareInsurance/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem" "${PWD}/organizations/peerOrganizations/LifecareInsurance/msp/tlscacerts/ca.crt"

  # Copy Lifecare's CA cert to Lifecare's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/LifecareInsurance/tlsca"
  cp "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem" "${PWD}/organizations/peerOrganizations/LifecareInsurance/tlsca/tlsca.LifecareInsurance-cert.pem"

  # Copy Lifecare's CA cert to Lifecare's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/LifecareInsurance/ca"
  cp "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem" "${PWD}/organizations/peerOrganizations/LifecareInsurance/ca/ca.LifecareInsurance-cert.pem"

  infoln "Registering LifecareEndorser"
  set -x
  fabric-ca-client register --caname ca-Lifecare --id.name LifecareEndorser --id.secret LifecareEndorserpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-Lifecare --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-Lifecare --id.name Lifecareadmin --id.secret Lifecareadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the LifecareEndorser msp"
  set -x
  fabric-ca-client enroll -u https://LifecareEndorser:LifecareEndorserpw@localhost:4054 --caname ca-Lifecare -M "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareEndorser/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/LifecareInsurance/msp/config.yaml" "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareEndorser/msp/config.yaml"

  infoln "Generating the LifecareEndorser-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://LifecareEndorser:LifecareEndorserpw@localhost:4054 --caname ca-Lifecare -M "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareEndorser/tls" --enrollment.profile tls --csr.hosts LifecareEndorser --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareEndorser/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareEndorser/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareEndorser/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareEndorser/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareEndorser/tls/keystore/"* "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareEndorser/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:4054 --caname ca-Lifecare -M "${PWD}/organizations/peerOrganizations/LifecareInsurance/users/User1@LifecareInsurance/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/LifecareInsurance/msp/config.yaml" "${PWD}/organizations/peerOrganizations/LifecareInsurance/users/User1@LifecareInsurance/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://Lifecareadmin:Lifecareadminpw@localhost:4054 --caname ca-Lifecare -M "${PWD}/organizations/peerOrganizations/LifecareInsurance/users/Admin@LifecareInsurance/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/LifecareInsurance/msp/config.yaml" "${PWD}/organizations/peerOrganizations/LifecareInsurance/users/Admin@LifecareInsurance/msp/config.yaml"



  # more peers are added to the network

  fabric-ca-client register --caname ca-Lifecare --id.name LifecareCommitters --id.secret LifecareCommitterspw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem"
  mkdir -p organizations/peerOrganizations/LifecareInsurance/peers/LifecareCommitters
  fabric-ca-client enroll -u https://LifecareCommitters:LifecareCommitterspw@localhost:4054 --caname ca-Lifecare -M "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareCommitters/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem"
  cp "${PWD}/organizations/peerOrganizations/LifecareInsurance/msp/config.yaml" "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareCommitters/msp/config.yaml"
  fabric-ca-client enroll -u https://LifecareCommitters:LifecareCommitterspw@localhost:4054 --caname ca-Lifecare -M "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareCommitters/tls" --enrollment.profile tls --csr.hosts LifecareCommitters --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem"
  cp "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareCommitters/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareCommitters/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareCommitters/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareCommitters/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareCommitters/tls/keystore/"* "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareCommitters/tls/server.key"

  fabric-ca-client register --caname ca-Lifecare --id.name LifecareAnchors --id.secret LifecareAnchorspw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem"
  mkdir -p organizations/peerOrganizations/LifecareInsurance/peers/LifecareAnchors
  fabric-ca-client enroll -u https://LifecareAnchors:LifecareAnchorspw@localhost:4054 --caname ca-Lifecare -M "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareAnchors/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem"
  cp "${PWD}/organizations/peerOrganizations/LifecareInsurance/msp/config.yaml" "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareAnchors/msp/config.yaml"
  fabric-ca-client enroll -u https://LifecareAnchors:LifecareAnchorspw@localhost:4054 --caname ca-Lifecare -M "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareAnchors/tls" --enrollment.profile tls --csr.hosts LifecareAnchors --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Lifecare/ca-cert.pem"
  cp "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareAnchors/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareAnchors/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareAnchors/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareAnchors/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareAnchors/tls/keystore/"* "${PWD}/organizations/peerOrganizations/LifecareInsurance/peers/LifecareAnchors/tls/server.key"

}



function createDiagnostic() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/DiagnosticCentre/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/DiagnosticCentre/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:3054 --caname ca-Diagnostic --tls.certfiles "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-3054-ca-Diagnostic.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-3054-ca-Diagnostic.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-3054-ca-Diagnostic.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-3054-ca-Diagnostic.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/DiagnosticCentre/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy Diagnostic's CA cert to Diagnostic's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/DiagnosticCentre/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem" "${PWD}/organizations/peerOrganizations/DiagnosticCentre/msp/tlscacerts/ca.crt"

  # Copy Diagnostic's CA cert to Diagnostic's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/DiagnosticCentre/tlsca"
  cp "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem" "${PWD}/organizations/peerOrganizations/DiagnosticCentre/tlsca/tlsca.DiagnosticCentre-cert.pem"

  # Copy Diagnostic's CA cert to Diagnostic's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/DiagnosticCentre/ca"
  cp "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem" "${PWD}/organizations/peerOrganizations/DiagnosticCentre/ca/ca.DiagnosticCentre-cert.pem"

  infoln "Registering DiagnosticEndorser"
  set -x
  fabric-ca-client register --caname ca-Diagnostic --id.name DiagnosticEndorser --id.secret DiagnosticEndorserpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-Diagnostic --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-Diagnostic --id.name Diagnosticadmin --id.secret Diagnosticadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the DiagnosticEndorser msp"
  set -x
  fabric-ca-client enroll -u https://DiagnosticEndorser:DiagnosticEndorserpw@localhost:3054 --caname ca-Diagnostic -M "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticEndorser/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/DiagnosticCentre/msp/config.yaml" "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticEndorser/msp/config.yaml"

  infoln "Generating the DiagnosticEndorser-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://DiagnosticEndorser:DiagnosticEndorserpw@localhost:3054 --caname ca-Diagnostic -M "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticEndorser/tls" --enrollment.profile tls --csr.hosts DiagnosticEndorser --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticEndorser/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticEndorser/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticEndorser/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticEndorser/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticEndorser/tls/keystore/"* "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticEndorser/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:3054 --caname ca-Diagnostic -M "${PWD}/organizations/peerOrganizations/DiagnosticCentre/users/User1@DiagnosticCentre/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/DiagnosticCentre/msp/config.yaml" "${PWD}/organizations/peerOrganizations/DiagnosticCentre/users/User1@DiagnosticCentre/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://Diagnosticadmin:Diagnosticadminpw@localhost:3054 --caname ca-Diagnostic -M "${PWD}/organizations/peerOrganizations/DiagnosticCentre/users/Admin@DiagnosticCentre/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/DiagnosticCentre/msp/config.yaml" "${PWD}/organizations/peerOrganizations/DiagnosticCentre/users/Admin@DiagnosticCentre/msp/config.yaml"



  # more peers are added to the network

  fabric-ca-client register --caname ca-Diagnostic --id.name DiagnosticCommitters --id.secret DiagnosticCommitterspw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem"
  mkdir -p organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticCommitters
  fabric-ca-client enroll -u https://DiagnosticCommitters:DiagnosticCommitterspw@localhost:3054 --caname ca-Diagnostic -M "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticCommitters/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem"
  cp "${PWD}/organizations/peerOrganizations/DiagnosticCentre/msp/config.yaml" "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticCommitters/msp/config.yaml"
  fabric-ca-client enroll -u https://DiagnosticCommitters:DiagnosticCommitterspw@localhost:3054 --caname ca-Diagnostic -M "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticCommitters/tls" --enrollment.profile tls --csr.hosts DiagnosticCommitters --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem"
  cp "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticCommitters/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticCommitters/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticCommitters/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticCommitters/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticCommitters/tls/keystore/"* "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticCommitters/tls/server.key"

  fabric-ca-client register --caname ca-Diagnostic --id.name DiagnosticAnchors --id.secret DiagnosticAnchorspw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem"
  mkdir -p organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticAnchors
  fabric-ca-client enroll -u https://DiagnosticAnchors:DiagnosticAnchorspw@localhost:3054 --caname ca-Diagnostic -M "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticAnchors/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem"
  cp "${PWD}/organizations/peerOrganizations/DiagnosticCentre/msp/config.yaml" "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticAnchors/msp/config.yaml"
  fabric-ca-client enroll -u https://DiagnosticAnchors:DiagnosticAnchorspw@localhost:3054 --caname ca-Diagnostic -M "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticAnchors/tls" --enrollment.profile tls --csr.hosts DiagnosticAnchors --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/Diagnostic/ca-cert.pem"
  cp "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticAnchors/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticAnchors/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticAnchors/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticAnchors/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticAnchors/tls/keystore/"* "${PWD}/organizations/peerOrganizations/DiagnosticCentre/peers/DiagnosticAnchors/tls/server.key"

 
}


function createOrderer() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/example.com

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/example.com

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:8054 --caname ca-orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-orderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-orderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-orderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-orderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/example.com/msp/tlscacerts/tlsca.example.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/example.com/tlsca/tlsca.example.com-cert.pem"

  infoln "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:8054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/config.yaml"

  infoln "Generating the orderer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:8054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls" --enrollment.profile tls --csr.hosts orderer.example.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem"

  infoln "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:8054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/example.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/example.com/users/Admin@example.com/msp/config.yaml"
}
